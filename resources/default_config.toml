# This is the template config file, which was opened in your default editor.
# If you want to use a different editor, please change your `VISUAL` (or `EDITOR`) environment
# variable.
# Some examples:
# - If you use VS Code: VISUAL='code --wait'
# - If you use IntelliJ: VISUAL='idea --wait'

# The API host
api_host = "https://your-domain.atlassian.net"
# Your login email
email = ""
# Create a new API token in https://id.atlassian.com/manage-profile/security/api-tokens and paste it
# here
token = ""
# Which port to use for the local server
server_port = 8017
# Which ip to bind to for the local server
server_ip = "127.0.0.1"
# How many requests can be made in parallel to the Jira API
api_parallelism = 10
api_timeout_seconds = 5

# Declare some well-known issue fields, that can be easily created.
# What follows is just an example, you should adapt it to your specific Jira installation
[[issue_fields]]
# A human-readable name, used in the kaiju code block
name = "Project"
# The field path in the JSON API
# See documentation at: https://docs.atlassian.com/software/jira/docs/api/REST/9.2.0/#api/2/issue-createIssue
# Use `.` to represent nested objects and `[]` to represent a list.
# You can put up to one "[]" symbol to indicate where the list should be created, see one example below.
api_field = "fields.project.key"
# A fixed list of suggestions. The user usually chose one of them, but can also type a different one
values = ["WEB", "BACKEND", "APP"]
default_value = "WEB"

[[issue_fields]]
name = "Type"
api_field = "fields.issuetype.name"
values = ["Story", "Bug", "Epic"]
default_value = "Story"

[[issue_fields]]
name = "Assignee"
api_field = "fields.assignee.accountId"
# Sometimes it's better to separate the list of possible values into a "value bag".
# This allows the same list to be reused by different fields and also to given the values labels.
# This is useful for users, which are identified by their opaque account ids in the API
values_from = "users"
default_value = "me"

[[issue_fields]]
name = "Epic"
api_field = "fields.parent.key"
values_from = "epics"

[[issue_fields]]
name = "Transition"
api_field = "transition.id"
values_from = "transitions"

[[issue_fields]]
name = "Subsystems"
api_field = "fields.customfield_77[]"
values = ["fire", "water", "wind", "earth"]

[value_bag.users]
me = "823483242"
Alice = "392923423"
Bob = "23446662"

[value_bag.epics]
"MVP" = "WEB-123"
"Make CEO happy" = "WEB-311"

[[transitions]]
id = "10"
name = "Design"
to_status = "Design"
to_status_id = "1"

[[transitions]]
id = "20"
name = "Implement"
to_status = "Implement"
to_status_id = "2"

[[transitions]]
id = "30"
name = "Review"
to_status = "Review"
to_status_id = "3"

[board.example]
# The id of the board. It can be recovered from the URL
board_id = "1337"
# Which fields store information about users, which should be displayed as avatars
card_avatars = ["assignee", "customfield_77"]
# Whether to show of hide the first column, which is usually the backlog
show_first_column = false
# The filter (if any) to apply to the last column, which is usually the done column
filter_last_column_resolved = "-7d"
# The field (if any) from which to load the short name for the epics
epic_short_name = "customfield_10009"
# The field (if any) from which to load the color of the epic
epic_color = "customfield_13624"

[cache]
ttl_board_configuration_seconds = 3600
ttl_board_issues_seconds = 10
ttl_issue_seconds = 10
ttl_epic_seconds = 60
ttl_development_info_seconds = 60
